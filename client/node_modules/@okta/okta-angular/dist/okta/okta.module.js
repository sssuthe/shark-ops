"use strict";
/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var components_1 = require("./components/");
var okta_service_1 = require("./services/okta.service");
var okta_guard_1 = require("./okta.guard");
var okta_config_1 = require("./models/okta.config");
var createService_1 = require("./createService");
var router_1 = require("@angular/router");
var OktaAuthModule = /** @class */ (function () {
    function OktaAuthModule() {
    }
    // Deprecated. Your app should provide OKTA_CONFIG directly
    OktaAuthModule.initAuth = function (config) {
        return {
            ngModule: OktaAuthModule,
            providers: [
                // Will NOT provide config when using AOT compiler. Your app module should provide this value statically in its providers section.
                { provide: okta_config_1.OKTA_CONFIG, useValue: config }
            ]
        };
    };
    OktaAuthModule.decorators = [
        { type: core_1.NgModule, args: [{
                    declarations: [
                        components_1.OktaCallbackComponent,
                        components_1.OktaLoginRedirectComponent
                    ],
                    exports: [
                        components_1.OktaCallbackComponent,
                        components_1.OktaLoginRedirectComponent
                    ],
                    providers: [
                        okta_guard_1.OktaAuthGuard,
                        {
                            provide: okta_service_1.OktaAuthService,
                            useFactory: createService_1.createOktaService,
                            deps: [
                                okta_config_1.OKTA_CONFIG,
                                router_1.Router
                            ]
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    OktaAuthModule.ctorParameters = function () { return []; };
    return OktaAuthModule;
}());
exports.OktaAuthModule = OktaAuthModule;
//# sourceMappingURL=okta.module.js.map